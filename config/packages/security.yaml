security:
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: phone
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            #security: false
            lazy: true
            provider: app_user_provider
            stateless: true
            custom_authenticators:
                - App\Security\OptionalAuthenticator
        facade:
            #для всех урлов которые начинаются на /, кроме api
            pattern: ^/panel/
            lazy: true
            provider: app_user_provider
            stateless: true
            custom_authenticators:
                - App\Security\UserAuthenticator
        api:
            #для всех урлов которые начинаются на /api, кроме restore,... и методов из supports в аутентификаторе
            pattern: ^/api/(?!doc|sms|email|restore|authorization|registration|forget)
            lazy: true
            provider: app_user_provider
            stateless: true
            custom_authenticators:
                - App\Security\ApiKeyAuthenticator
        optional:
            #для всех урлов, опциональная авторизация, либо есть, либо нет
            pattern: ^/
            lazy: true
            provider: app_user_provider
            stateless: true
            custom_authenticators:
                - App\Security\OptionalAuthenticator
        main:
            lazy: true
            provider: app_user_provider

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin/comments, roles: [ ROLE_MODERATOR, ROLE_ADMIN ] }
        - { path: ^/admin/materials, roles: [ ROLE_EDITOR, ROLE_ADMIN ] }
        - { path: ^/admin, roles: [ ROLE_ADMIN ] }
        # - { path: ^/profile, roles: ROLE_USER }
